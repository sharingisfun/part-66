{"title":"pluralsight-JavaScript Design Patterns","uid":7326760,"size":204490484,"categoryP":"video","categoryS":"other","magnet":"?xt=urn:btih:8eb45e780dd7a7d672342c9d6d9c4f632f45739c&amp;dn=pluralsight-JavaScript+Design+Patterns&amp;tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A80&amp;tr=udp%3A%2F%2Fopen.demonii.com%3A1337&amp;tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&amp;tr=udp%3A%2F%2Fexodus.desync.com%3A6969","seeders":0,"leechers":3,"uploader":"DesireSearch365","files":38,"time":1338782999,"description":"JavaScript Design Patterns\n==========================\n\nUseful design patterns for JavaScript development\n &lt;a href=&quot;\nhttp://www.pluralsight-training.net/microsoft/Courses/TableOfContents?courseName=javascript-design-patterns&quot; rel=&quot;nofollow&quot; target=&quot;_NEW&quot;&gt;\nhttp://www.pluralsight-training.net/microsoft/Courses/TableOfContents?courseName=javascript-design-patterns&lt;/a&gt;\n\nJavaScript should be treated like any programming language when it comes to designing your code structure. Throughout this course we'll look at a number of different design patterns which are useful when writing JavaScript centric applications. The course starts with several common patterns, including function argument patterns, chaining, and observable properties. We continue with a look at patterns using timers, including asynchronous execution and recursive setTimeout. Finally we review module patterns, pub-sub patterns, and the promise pattern.","torrent":{"xt":"urn:btih:8eb45e780dd7a7d672342c9d6d9c4f632f45739c","amp;dn":"pluralsight-JavaScript+Design+Patterns","amp;tr":["udp%3A%2F%2Ftracker.openbittorrent.com%3A80","udp%3A%2F%2Fopen.demonii.com%3A1337","udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969","udp%3A%2F%2Fexodus.desync.com%3A6969"],"infoHash":"8eb45e780dd7a7d672342c9d6d9c4f632f45739c","infoHashBuffer":{"type":"Buffer","data":[142,180,94,120,13,215,167,214,114,52,44,157,109,156,79,99,47,69,115,156]},"announce":[],"urlList":[]}}